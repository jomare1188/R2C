// config file for defining DSL2 module options and publishing paths

params {
    out_dir = '../results'           // outside 'workflows' directory, e.g. 'nextflow/results' and not the projectDir 'nextflow/workflows/results' (ofc we can discuss other options)
    report_dir = 'report'
    publish_dir_mode = 'symlink'    // avoid duplicating output files (I think we should always try to use symlink instead of copy mode)
    ref_genome = "$projectDir/../references/all_transcripts_idsok.fasta"
    index_salmon = "$projectDir/../references/all_transcripts/salmon_index/"
    envs_dir = "envs"
}

// OBS: that is just a draft version; we must try to remove every 'code smell' from our code (if possible)

conda {
    enabled = true
    useMamba = true  // Optional: use mamba for faster package resolution
}

report {
    enabled = true
    report.overwrite = true
    file = "${params.report_dir}/execution_report.html"
}

dag {
    enabled = true
    dag.overwrite = true
    file = "${params.report_dir}/execution_dag.html"
}

timeline {
    enabled = true
    timeline.overwrite = true
    file = "${params.report_dir}/execution_timeline.html"
}

trace {
    enabled = true
    trace.overwrite = true
    file = "${params.report_dir}/execution_trace.txt"
}

process {
    // Basic configuration for all profiles
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'
    executor = 'sge'
    clusterOptions = '-l hostname=telura'
    // Default resources for all processes

    withName: 'raw_fastqc' {
        queue = 'all.q'
        clusterOptions = "-N raw_fastqc -pe smp 1 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/3_rawReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'raw_multiqc' {
	queue = 'all.q'
	clusterOptions = "-N raw_multiqc -pe smp 1 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/4_rawReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'bbduk' {
        queue = 'all.q'
	clusterOptions = "-N bbduk -pe smp 5 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/5_trimmedReads",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'bbduk_stats' {
        queue = 'all.q'
	conda = "/home/jorge.munoz/.conda/envs/R-env"
        clusterOptions = "-N bbduk_stats -pe smp 1 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/5_trimmedReads",
            mode: params.publish_dir_mode
        ]
    }
	
    withName: 'trimmed_fastqc' {
        queue = 'all.q'
        clusterOptions = "-N trimmed_fastqc -pe smp 1 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/6_trimmedReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'trimmed_multiqc' {
        queue = 'all.q'
        clusterOptions = "-N trimmed_multiqc -pe smp 1 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/7_trimmedReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonIndex' {
        queue = 'all.q'
        clusterOptions = "-N salmon_index -pe smp 8 -cwd -V"
        publishDir = [
            path: "$projectDir/${params.out_dir}/8_salmonIndex",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonQuant' {
	queue = 'all.q'
	clusterOptions = "-N quant -pe smp 12 -cwd -V"

        publishDir = [
            path: "$projectDir/${params.out_dir}/9_salmonQuant",
            mode: params.publish_dir_mode,
            saveAs: { "${it}/" } // Preserva estrutura de diret√≥rios
        ]
    }

    withName: 'salmonQuantMerge' {
	queue = 'all.q'
	clusterOptions = "-N quant_merge -pe smp 1 -cwd -V"

        publishDir = [
            path: "$projectDir/${params.out_dir}/10_expressionMatrix",
            mode: params.publish_dir_mode,
        ]
    }
}

// SGE executor settings
executor {
    name = 'sge'
    queueSize = 5
    submitRateLimit = '5 sec'
}
